version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecret
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5

  create-topic:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: |
      "
      sleep 10 &&
      kafka-topics --create --topic zap-events --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka:9092
      "
    restart: "no"

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3001:3000"
    depends_on:
      - primary_backend
    environment:
      BACKEND_URL: http://primary_backend:3000
      HOOKS_URL: http://hooks:3009

  primary_backend:
    build: ./primary_backend
    container_name: primary_backend
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:mysecret@postgres:5432/postgres
      JWT_SECRET: mysecert

  hooks:
    build: ./hooks
    container_name: hooks
    ports:
      - "3009:3009"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:mysecret@postgres:5432/postgres
    

  worker:
    build: ./worker
    container_name: worker
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:mysecret@postgres:5432/postgres
      KAFKA_BROKER: kafka:9092

  processor:
    build: ./processor
    container_name: processor
    depends_on:
      - kafka
      - postgres
    environment:
      DATABASE_URL: postgresql://postgres:mysecret@postgres:5432/postgres
      KAFKA_BROKER: kafka:9092
volumes:
  pgdata:
    driver: local
